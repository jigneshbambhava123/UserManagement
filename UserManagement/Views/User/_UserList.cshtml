@model UserManagement.ViewModels.PaginatedList<UserManagement.ViewModels.User>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@{ 
var currentUserId = User.Claims.FirstOrDefault(c => c.Type == "UserId" || c.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier")?.Value;  
}
<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Firstname</th>
                <th>Lastname</th>
                <th>Email</th>
                <th>Role</th>
                <th>Phone Number</th>
                <th>Age</th>
                <th>Active</th>
                @if (User.IsInRole("Admin"))
                {
                <th>Action</th>
                }
            </tr>
        </thead>
        <tbody>
        @if (Model.Items.Any())
        {
        @foreach (var user in Model.Items)
        {
            <tr>
                <td>@user.Firstname</td>
                <td>@user.Lastname</td>
                <td>@user.Email</td>
                @if(user.RoleId==1){
                    <td>Admin</td>
                }else{
                    <td>User</td>
                }
                <td>@user.PhoneNumber</td>
                <td>
                    @{
                        if (user.Dateofbirth != default(DateTime))
                        {
                            var today = DateTime.Today;
                            var birthDate = user.Dateofbirth.Date;
                            var age = today.Year - birthDate.Year;
                            if (today < birthDate.AddYears(age))
                            {
                                age--; 
                            }
                            @age
                        }
                        else
                        {
                            @:N/A
                        }
                    }
                </td>
                <td>@(user.IsActive ? "Yes" : "No")</td>
                @if (User.IsInRole("Admin"))
                {
                <td class="d-flex">
                    <a href="@Url.Action("Edit", "User", new { id = user.Id })" class="btn btn-sm btn-warning mb-2 me-2 mt-2">
                        <i class="bi bi-pencil" style="color: black;"></i>

                    </a>
                    @if (user.Id.ToString() != currentUserId)
                    {
                    <div class="mt-2">|</div>
                    <i class="bi bi-trash btn btn-danger btn-sm mb-2 mt-2 ms-2" data-bs-toggle="modal" data-bs-target="#deleteUserModal" data-id="@user.Id"></i>
                    }
                </td>
                }
            </tr>
        }
        }
        else
        {
            <tr>
            
                <td colspan="4"><div class="alert text-center mt-3">
                No records found.
            </div></td>
            </tr>
        }
        </tbody>
    </table>

     <!-- Pagination Controls -->
    <div class="d-sm-flex justify-content-end me-3 pb-3 mt-3">
        <!-- Items Per Page -->
        <div class="items-per-page me-3 mb-2">
            <label for="ordersPerPage" class="me-2">Items per page:</label>
            <select id="ordersPerPage" onchange="changeUserlistPageSize(this)" style="height: 27px; width: 55px; border-radius: 5px;">
                <option value="5" selected="@(Model.PageSize == 5 ? "selected" : null)">5</option>
                <option value="10" selected="@(Model.PageSize == 10 ? "selected" : null)">10</option>
                <option value="20" selected="@(Model.PageSize == 20 ? "selected" : null)">20</option>
                <option value="25" selected="@(Model.PageSize == 25 ? "selected" : null)">25</option>
            </select>
        </div>

        <!-- Showing Items Text -->
        <div class="showing-items me-3 mb-2">
            Showing @(((Model.CurrentPage - 1) * Model.PageSize) + 1) 
            - @(((Model.CurrentPage * Model.PageSize) > Model.TotalItems ? Model.TotalItems : (Model.CurrentPage * Model.PageSize))) 
            of @Model.TotalItems
        </div>

        <!-- Pagination Buttons -->
        <div class="pagination mb-2">
            <!-- Previous Button -->
            <button class="me-2" style="border: 2px solid rgb(94, 89, 89); border-radius: 5px;" onclick="changeUserPage(@(Model.CurrentPage - 1))"
                    @(Model.CurrentPage <= 1 ? "disabled" : "")>
                <i class="bi bi-chevron-left"></i>
            </button>

            <!-- Next Button -->
            <button style="border: 2px solid rgb(94, 89, 89); border-radius: 5px;" onclick="changeUserPage(@(Model.CurrentPage + 1))"
                    @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")>
                <i class="bi bi-chevron-right"></i>
            </button>
        </div>      
    </div>
</div>
