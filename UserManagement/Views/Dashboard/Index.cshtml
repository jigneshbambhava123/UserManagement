@{
    ViewData["Title"] = "Resource Dashboard";
}

<div class="d-sm-flex justify-content-between mb-3 mt-3">
    <h3 class="dashboard" style="color: #0066a7;">
        Dashboard
    </h3>    
</div>

<div class="active-users-section shadow-sm  bg-white rounded">
    <h2 class="active-users-heading">
        <i class="bi bi-people me-3" style="color: #70c0ef;"></i>
        <div style="color: #70c0ef;">Active Users</div>
    </h2>
    <p class="active-user-count" style="color: #70c0ef;" id="activeUserCountDisplay">
        
    </p>
</div>

<div class="chart-section shadow-sm  bg-white rounded">
    <div class="chart-heading-container">
        <h2 class="chart-heading">
            <i class="bi bi-clock-history me-3" style="color: #70c0ef;"></i>
            <div style="color: #70c0ef;">Free Resources History</div>
        </h2>
        <select id="daysFilter" class="days-filter-select">
            <option value="10" selected>Last 10 Days</option>
            <option value="30" >Last 30 Days</option>
            <option value="60">Last 60 Days</option>
        </select>
    </div>
     <div id="noDataMessage" class="text-center text-muted mt-5" style="display: none;">
        <i class="bi bi-emoji-frown" style="font-size: 2rem;"></i>
        <p  style="color: #70c0ef;">No data available for the selected range.</p>
    </div>
    <div class="chart-container">
        <canvas id="resourceUsageChart"></canvas>
    </div>
   

</div>

@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let resourceUsageChart;
        let allHistoricalData = [];

        function getActiveUserCount() {
            $.ajax({
                url: '/Dashboard/GetActiveUserCount', 
                method: 'GET',
                dataType: 'json', 
                success: function(activeUserCount) {
                    $('#activeUserCountDisplay').text(activeUserCount);
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching active user count:', textStatus, errorThrown);
                    $('#activeUserCountDisplay').text('0');
                }
            });
        }

        function fetchAllResourceHistory() {
            $.ajax({
                url: '/Dashboard/GetResourceUsed', 
                method: 'GET',
                dataType: 'json', 
                success: function(data) {
                    allHistoricalData = data;
                    console.log('Fetched all historical data:', allHistoricalData);

                    const initialDays = $('#daysFilter').val(); 
                    renderResourceUsageChart(parseInt(initialDays, 10)); 
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error('Error fetching all resource usage history:', textStatus, errorThrown);
                }
            });
        }

        function renderResourceUsageChart(days) {
            if (!allHistoricalData || allHistoricalData.length === 0) {
                console.warn('No historical data available to render chart.');
                if (resourceUsageChart) {
                    resourceUsageChart.destroy();
                    resourceUsageChart = null;
                }
                 $('.chart-container').hide();
                $('#noDataMessage').show(); 
                return;
            }

            const now = new Date(); 
            const cutoffDate = new Date();
            cutoffDate.setDate(now.getDate() - days);

            const filteredData = allHistoricalData.filter(item => {
                const itemDate = new Date(item.toDate); 
                return itemDate >= cutoffDate && itemDate <= now;
            });

            const quantity = {};
            filteredData.forEach(item => {
                const dateKey = new Date(item.toDate).toLocaleDateString('en-CA');
                if (!quantity[dateKey]) {
                    quantity[dateKey] = 0;
                }
                quantity[dateKey] += item.quantity;
            });

            const labels = [];
            const chartQuantities = [];
            for (let i = days - 1; i >= 0; i--) {
                const date = new Date();
                date.setDate(now.getDate() - i);
                const dateKey = date.toLocaleDateString('en-CA');
                labels.push(date.toLocaleDateString()); 
                chartQuantities.push(quantity[dateKey] || 0); 
            }

            const hasData = chartQuantities.some(q => q > 0);
            if (!hasData) {
                if (resourceUsageChart) {
                    resourceUsageChart.destroy();
                    resourceUsageChart = null;
                }

                $('.chart-container').hide();
                $('#noDataMessage').show(); 
                return;
            }

            $('#noDataMessage').hide();    
            $('.chart-container').show(); 

            const ctx = document.getElementById('resourceUsageChart').getContext('2d');

            if (resourceUsageChart) {
                resourceUsageChart.destroy();
            }

            resourceUsageChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels, 
                    datasets: [{
                        label: 'Total Quantity Used', 
                        data: chartQuantities, 
                        backgroundColor: '#70c0ef',
                        borderColor: '#70c0ef',
                        borderWidth: 1,
                        borderRadius: 4,
                        hoverBackgroundColor: '#b1dbf3',
                        hoverBorderColor: '#b1dbf3',
                    }]
                },
                options: {
                    responsive: true, 
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: true, 
                            labels: {
                                color: '#70c0ef' 
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(0,0,0,0.7)',
                            titleColor: '#fff',
                            bodyColor: '#fff',
                            cornerRadius: 6,
                            displayColors: false, 
                            callbacks: {
                                label: function(context) {
                                    return `Quantity: ${context.raw}`;
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                display: false, 
                            },
                            ticks: {
                                autoSkip: true, 
                                maxRotation: 45, 
                                minRotation: 0,
                                color: 'black'
                            },
                            title: {
                                display: true, 
                                text: 'Date',
                                color: 'black'
                               
                            }
                        },
                        y: {
                            beginAtZero: true, 
                            grid: {
                                color: 'rgba(229, 231, 235, 0.5)', 
                            },
                            title: {
                                display: true, 
                                text: 'Total Quantity Used',
                                color: 'black'
                                
                            },
                            ticks: {
                                precision: 0 ,  
                                color: 'black'
                            }
                        }
                    }
                }
            });
        }

        $(document).ready(function() {

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("http://localhost:5086/resourceHub")
                .build();

            connection.start().catch(err => console.error(err.toString()));

            connection.on("ReceiveUserCountUpdate", (updatedCount) => {
                $('#activeUserCountDisplay').text(updatedCount);
            });
            
            getActiveUserCount();      
            fetchAllResourceHistory(); 

            $('#daysFilter').on('change', function() {
                const selectedDays = parseInt($(this).val(), 10); 
                renderResourceUsageChart(selectedDays); 
            });
        });
    </script>
}

